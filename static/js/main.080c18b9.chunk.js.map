{"version":3,"sources":["CartContext.jsx","CartProvider.jsx","components/Cart/Cart.jsx","components/SubViews/hooks.js","ModalProvider.jsx","components/BeerModal/BeerModal.jsx","components/BeerList/BeerList.jsx","theme.js","components/SubViews/SubViews.jsx","components/MainView/MainView.jsx","App.js","serviceWorker.js","index.js"],"names":["CartContext","React","createContext","CartProvider","props","useState","cart","setCart","Provider","value","children","useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","bottomOfScreen","flex","MuiAlert","Alert","elevation","variant","Cart","classes","useContext","newBeerFromId","setnewBeerFromId","expanded","setExpanded","totalPrice","reduce","acc","curr","price","completed","setCompleted","NotifyCheckoutComplete","setNotifyCheckoutComplete","onFirstLoad","setOnFirstLoad","handleCloseNotifyCheckoutComplete","event","reason","console","log","useEffect","timer","setInterval","oldCompleted","diff","Math","random","min","clearInterval","className","AppBar","position","Toolbar","Typography","color","Box","width","align","m","IconButton","onClick","aria-expanded","aria-label","ShoppingCart","Snackbar","open","autoHideDuration","onClose","severity","Collapse","in","timeout","unmountOnExit","style","length","TableContainer","component","Paper","Table","TableBody","map","id","name","image_url","abv","tagline","description","food_pairing","TableRow","key","TableCell","scope","Badge","badgeContent","src","alt","e","Delete","LinearProgress","Button","fullWidth","useFetch","url","data","setData","loading","setLoading","a","fetch","response","json","fetchUrl","ModalContext","ModalProvider","forwardRef","ref","onEnter","onExited","other","useSpring","from","opacity","to","onStart","onRest","div","palette","background","paper","display","modal","alignItems","justifyContent","border","boxShadow","shadows","padding","spacing","root2","details","flexDirection","content","cover","controls","paddingLeft","paddingBottom","playIcon","sticky","bottom","unit","Fade","BeerList","setOpen","ExpandDescription","ExpandPairings","handleClose","selectedShowDescription","setSelectedShowDescription","selectedShowPairings","setSelectedShowPairings","handleCollapseDescription","prev","handleCollapseDPairings","notifyAddToCart","setNotifyAddToCart","handleCloseNotifySuccess","beerData","addToCart","newBeer","filter","d","beer","toString","prevCompleted","undefined","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Card","CardContent","fontWeight","container","collapsedHeight","ToggleButton","onChange","selected","startIcon","ShoppingCartOutlined","CardMedia","image","title","Grid","item","xs","CardActionArea","handleOpen","isNaN","CheckCircleOutlineOutlined","CircularProgress","size","colors","primary","secondary","yellow","status","green","createMuiTheme","type","main","innerTheme","TabPanel","index","role","hidden","p","a11yProps","MainView","useTheme","setValue","Tabs","newValue","indicatorColor","textColor","centered","Tab","label","ThemeProvider","axis","direction","onChangeIndex","dir","Consumer","context","indicator","view","setview","newview","icon","App","Boolean","window","location","hostname","match","GlobalCss","withStyles","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.080c18b9.chunk.js","sourcesContent":["import React from 'react';\n\n// this is the equivalent to the createStore method of Redux\n// https://redux.js.org/api/createstore\n\nconst CartContext = React.createContext();\n\nexport default CartContext;","// import CartContext from './CartContext';\nimport React, {useFetch, useState} from 'react'\n\nexport const CartContext = React.createContext();\n\nexport const CartProvider = (props) => {\nconst [cart, setCart] = useState([]);\nconst [open, setOpen] = React.useState(false);\n\n    \n\n\n        return (\n            <CartContext.Provider value={[cart, setCart]}>\n                {props.children}\n            </CartContext.Provider>\n        );\n\n}\n\n","import React, { useContext, setState, useState } from 'react';\nimport { CartContext } from '../../CartProvider';\nimport { Snackbar, LinearProgress, AppBar, Toolbar, Typography, Grid, Card, CardContent, CardMedia, Button, Chip, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Badge, Paper, Box, IconButton, ButtonGroup } from '@material-ui/core';\nimport { Remove, Add, Delete, ShoppingCart } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Collapse from '@material-ui/core/Collapse';\nimport { red } from '@material-ui/core/colors';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Alert, ToggleButton } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n    bottomOfScreen: {\n\n        flex: 1\n    }\n}));\n\nfunction MuiAlert(props) {\n    return <Alert elevation={6} variant=\"filled\"  {...props} />;\n}\n\n\nexport const Cart = () => {\n    const classes = useStyles();\n\n    const [cart, setCart] = useContext(CartContext)\n    const [count, setCount] = useState([]);\n    const beerPrice = 4;\n    const [newBeerFromId, setnewBeerFromId] = useContext(CartContext);\n    const removeBeer = (e, id) => {\n        setnewBeerFromId([])\n    }\n    const [expanded, setExpanded] = React.useState(false);\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n    const totalPrice = cart.reduce((acc, curr) => acc + curr.price, 0);\n    const [completed, setCompleted] = React.useState(100);\n    const [NotifyCheckoutComplete, setNotifyCheckoutComplete] = React.useState(false);\n    const [onFirstLoad, setOnFirstLoad] = React.useState();\n    const handleCloseNotifyCheckoutComplete = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setNotifyCheckoutComplete(false);\n    };\n    const submitBasket = (e, id) => {\n        setNotifyCheckoutComplete(false)\n        setOnFirstLoad(1)\n        setCompleted(0)\n    }\n    console.log(onFirstLoad)\n    React.useEffect(() => {\n        function progress() {\n            setCompleted((oldCompleted) => {\n                if (oldCompleted === 100) {\n                    setnewBeerFromId([])\n                    setNotifyCheckoutComplete(true)\n                    return undefined;\n                }\n                const diff = Math.random() * 10;\n                return Math.min(oldCompleted + diff, 100);\n            });\n        }\n\n        const timer = setInterval(progress, 500);\n\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n\n    return (\n\n        <div>\n            <div className={classes.bottomOfScreen}>\n                <AppBar position=\"static\" >\n                    <Toolbar>\n                        <Typography variant=\"h5\" color=\"secondary\">£{totalPrice}</Typography>\n                        <Box width=\"100%\" align=\"center\" m={2}>Buy-A-Brew</Box>\n\n                        <IconButton\n                    \n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            aria-label=\"show more\"\n\n                        >\n                            <ShoppingCart />\n                        </IconButton>\n\n\n                    </Toolbar>\n                </AppBar>\n            </div>\n            {onFirstLoad !== 1 ? null :\n                <Snackbar open={NotifyCheckoutComplete} autoHideDuration={6000} onClose={handleCloseNotifyCheckoutComplete}>\n                    <MuiAlert onClose={handleCloseNotifyCheckoutComplete} severity=\"success\">\n                        Purchase Successful\n                    </MuiAlert>\n                </Snackbar>\n            }\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                <Typography style={{ color: 'white' }} align=\"center\" variant=\"h6\">{cart.length} items in cart</Typography>\n\n                <TableContainer component={Paper}>\n                    <Table >\n\n                        <TableBody >\n                            {newBeerFromId.map(({ id, name, price, image_url, abv, tagline, description, food_pairing }) => (\n                                <TableRow key={id}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        <Badge badgeContent={\"£\" + price} color=\"secondary\">\n                                            <img src={image_url} alt={name} height=\"50\" width=\"20\"></img>\n                                        </Badge>\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                        {name}\n                                        <br />\n                                        {/* {tagline} */}\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        {/* TODO: impkiment product counter */}\n                                        {/* <ButtonGroup>\n                                    <Box display=\"flex\" flexDirection=\"row\" >\n                                        <IconButton variant=\"contained\" color=\"secondary\" onClick={() => setCount(count - 1)}>\n                                            <Remove />\n                                        </IconButton>\n                                        <Box width={30} style={{ textAlign: 'center', paddingTop: 10 }}>{count}</Box>\n\n                                        <IconButton width={10} variant=\"contained\" color=\"secondary\" onClick={() => setCount(count + 1)}>\n                                            <Add />\n                                        </IconButton>\n                                    </Box>\n                                    </ButtonGroup> */}\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <IconButton aria-label=\"delete\" onClick={e => removeBeer(e, id)} >\n                                            <Delete />\n                                        </IconButton>\n                                    </TableCell>\n\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                {totalPrice === 0 ?\n                    <Typography style={{ color: 'white' }} align=\"center\" variant=\"h6\">Add an item...</Typography>\n                    :\n                    <Box m={3}>\n                        <Typography style={{ color: 'white' }} align=\"center\" variant=\"h6\">Total: £{totalPrice}</Typography>\n                        {!completed ? <div /> : <LinearProgress variant=\"determinate\" value={completed} />\n                        }\n                        <Button\n                            onClick={submitBasket}\n                            fullWidth variant=\"contained\" color=\"secondary\">\n                            {completed <= 100\n                                ?\n                                \"processing\"\n                                :\n                                \"Confirm Payment\"\n                            }\n                        </Button>\n                    </Box>\n                }\n            </Collapse>\n        </div>\n    )\n}","// hooks.js\nimport { useState, useEffect } from \"react\";\nfunction useFetch(url) {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  async function fetchUrl() {\n    const response = await fetch(url);\n    const json = await response.json();\n    setData(json);\n    setLoading(false);\n  }\n  useEffect(() => {\n    fetchUrl();\n  }, []);\n  return [data, loading];\n}\nexport { useFetch };","// import CartContext from './CartContext';\nimport React, {useFetch, useState} from 'react'\n\nexport const ModalContext = React.createContext();\n\nexport const ModalProvider = (props) => {\nconst [cart, setCart] = useState([]);\nconst [open, setOpen] = useState(false);\nconst [newBeerFromId, setnewBeerFromId] = useState(false);\n\n    \n\n\n        return (\n            <ModalContext.Provider value={[newBeerFromId, setnewBeerFromId]}>\n                {props.children}\n            </ModalContext.Provider>\n        );\n\n}\n\n","// import CartContext from './CartContext';\nimport React, { useState, useContext } from 'react'\nimport { CartContext } from '../../CartProvider'\nimport { ModalContext } from '../../ModalProvider'\nimport { Beer } from '../Beer/Beer'\nimport { useFetch } from \"../SubViews/hooks\";\nimport { Button, Modal, Backdrop, Snackbar, Grid, Card, CardContent, CardMedia, Collapse, CardActionArea, Box, Typography } from '@material-ui/core';\nimport { makeStyles, useTheme, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { Alert, ToggleButton } from '@material-ui/lab';\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\n\nconst Fade = React.forwardRef(function Fade(props, ref) {\n    const { in: open, children, onEnter, onExited, ...other } = props;\n    const style = useSpring({\n        from: { opacity: 0 },\n        to: { opacity: open ? 1 : 0 },\n        onStart: () => {\n            if (open && onEnter) {\n                onEnter();\n            }\n        },\n        onRest: () => {\n            if (!open && onExited) {\n                onExited();\n            }\n        },\n    });\n\n    return (\n        <animated.div ref={ref} style={style} {...other}>\n            {children}\n        </animated.div>\n    );\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    media: {\n        height: 150,\n        display: 'flex',\n\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    root2: {\n        display: 'flex',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        width: '100%',\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n    sticky: {\n        position: '-webkit-sticky',\n        position: 'sticky',\n        top: 0,\n        backgroundColor: 'yellow',\n        padding: '50px',\n        fontSize: '20px',\n    },\n    bottomOfScreen: {\n\n        position: \"fixed\",\n        bottom: theme.spacing.unit * -13,\n    }\n}));\n\nfunction MuiAlert(props) {\n    return <Alert elevation={6} variant=\"filled\" {...props} />;\n}\nexport const BeerModal = (open) => {\n\n    const [beerData] = useFetch(\n        \"https://api.punkapi.com/v2/beers\"\n    )\n\n    // const [open, setOpen] = React.useState(false);\n\n    const classes = useStyles();\n    const [ExpandDescription, setExpandDescription] = React.useState(true);\n    const [ExpandPairings, setExpandPairings] = React.useState(true);\n    const [newBeerFromId, setnewBeerFromId] = useContext(ModalContext);\n    // const [open, setOpen] = React.useState(false);\n\n    // console.log('Selected beer id', newBeerFromId)\n\n    // const handleOpen = (e, id) => {\n    //     setOpen(true);\n    //     console.log('open: ', id);\n    //     setnewBeerFromId(id);\n    // };\n\n    const handleClose = () => {\n        // setOpen(false);\n        // setnewBeerFromId(0);        \n\n    };\n    const handleClick = () => {\n        // setOpen(!open);\n    };\n    const [selectedShowDescription, setSelectedShowDescription] = React.useState(false);\n\n    const [selectedShowPairings, setSelectedShowPairings] = React.useState(false);\n    const handleCollapseDescription = () => {\n        setSelectedShowDescription((prev) => !prev);\n    };\n    const handleCollapseDPairings = () => {\n        setSelectedShowPairings((prev) => !prev);\n    };\n    const [notifyAddToCart, setNotifyAddToCart] = React.useState(false);\n    const handleCloseNotifySuccess = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setNotifyAddToCart(false);\n    };\n    return (\n        <div className={classes.root}>\n\n            <Modal\n                aria-labelledby=\"spring-modal-title\"\n                aria-describedby=\"spring-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <Button onClick={handleClose} variant=\"contained\" color=\"primary\">close</Button>\n\n\n                    {beerData.filter(d => d.id === newBeerFromId).map(({ id, name, image_url, abv, tagline, description, food_pairing }) => (\n                //         <Card className={classes.root2}>\n                //             <div className={classes.details}>\n                //                 <CardContent className={classes.content}>\n                //                     <Box component=\"p\" align=\"center\" fontWeight=\"fontWeightBold\">\n                //                         <Typography variant=\"h4\">\n                //                             {name}\n                //                         </Typography>\n                //                     </Box>\n                //                     <Typography variant=\"body2\" component=\"p\" align=\"center\">\n                //                         {tagline}\n                //                     </Typography>\n                //                     <Typography variant=\"body2\" component=\"p\" align=\"center\">\n                //                         {abv}%\n                // </Typography>\n                //                     <br />\n                //                     <Collapse in={ExpandDescription} timeout=\"auto\" unmountOnExit>\n                //                         <div className={classes.container}>\n                //                             <div className={classes.root}>\n                //                                 <div className={classes.container}>\n                //                                     <Collapse in={selectedShowDescription}>\n                //                                         Description:\n                //                 </Collapse>\n                //                                     <Collapse in={selectedShowDescription} collapsedHeight={40}>\n                //                                         <Typography variant=\"body2\" component=\"p\">\n                //                                             {description}\n                //                                         </Typography>\n                //                                     </Collapse>\n                //                                 </div>\n                //                                 <ToggleButton onChange={handleCollapseDescription}\n                //                                     style={{ border: 'none' }}\n                //                                     selected={selectedShowDescription}>\n\n                //                                     {selectedShowDescription ? 'Less' : 'More'}\n\n                //                                 </ToggleButton>\n                //                             </div>\n                //                         </div>\n                //                     </Collapse>\n                //                     <Collapse in={ExpandPairings} timeout=\"auto\" unmountOnExit>\n                //                         <div className={classes.container}>\n                //                             <div className={classes.root}>\n                //                                 <div className={classes.container}>\n                //                                     <Collapse in={selectedShowPairings}>\n                //                                         Perfect Pairings:\n                //                                     </Collapse>\n                //                                     <Collapse in={selectedShowPairings} collapsedHeight={40}>\n                //                                         <Typography variant=\"body2\" component=\"p\">\n                //                                             {food_pairing}\n                //                                         </Typography>\n                //                                     </Collapse>\n                //                                 </div>\n                //                                 <ToggleButton onChange={handleCollapseDPairings}\n                //                                     style={{ border: 'none' }}\n                //                                     selected={selectedShowPairings}>\n\n                //                                     {selectedShowPairings ? 'Less' : 'More'}\n\n                //                                 </ToggleButton>\n                //                                 {/* <Button onClick={addToCart} fullWidth variant=\"contained\" color=\"secondary\">Buy Now</Button> */}\n\n                //                             </div>\n                //                         </div>\n                //                     </Collapse>\n                //                 </CardContent>\n                //             </div>\n                //             <CardMedia\n                //                 className={classes.cover}\n                //                 image={image_url}\n                //                 title={name}\n                //             />\n                //             <Snackbar open={notifyAddToCart} autoHideDuration={6000} onClose={handleCloseNotifySuccess}>\n                //                 <MuiAlert onClose={handleCloseNotifySuccess} severity=\"success\">\n                //                     Added \"{name}\" to cart!\n                //                 </MuiAlert>\n                //             </Snackbar>\n                //         </Card>\n                    <p>{name}</p>\n\n                    ))\n                    }\n                </Fade>\n            </Modal>\n        </div>\n    );\n\n}\n\n","// import CartContext from './CartContext';\nimport React, { useState, useContext } from 'react'\nimport { CartContext } from '../../CartProvider'\n\nimport { Beer } from '../Beer/Beer'\nimport { useFetch } from \"../SubViews/hooks\";\nimport { Modal, Backdrop, Button, Grid, Card, CardContent, Snackbar, Collapse, CardMedia, CardActionArea, Box, Typography, CircularProgress } from '@material-ui/core';\nimport { makeStyles, useTheme, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { ModalContext } from '../../ModalProvider';\nimport { BeerModal } from '../BeerModal/BeerModal'\nimport { Alert, ToggleButton } from '@material-ui/lab';\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\nimport { Remove, Add, Delete, ShoppingCartOutlined, CheckCircleOutlineOutlined } from '@material-ui/icons';\nimport { red, yellow, green } from '@material-ui/core/colors';\n\nconst Fade = React.forwardRef(function Fade(props, ref) {\n    const { in: open, children, onEnter, onExited, ...other } = props;\n    const style = useSpring({\n        from: { opacity: 0 },\n        to: { opacity: open ? 1 : 0 },\n        onStart: () => {\n            if (open && onEnter) {\n                onEnter();\n            }\n        },\n        onRest: () => {\n            if (!open && onExited) {\n                onExited();\n            }\n        },\n    });\n\n    return (\n        <animated.div ref={ref} style={style} {...other}>\n            {children}\n        </animated.div>\n    );\n});\n\nfunction MuiAlert(props) {\n    return <Alert elevation={6} variant=\"filled\"  {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    media: {\n        height: 150,\n        display: 'flex',\n\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    root2: {\n        display: 'flex',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        width: '100%',\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n    sticky: {\n        position: '-webkit-sticky',\n        position: 'sticky',\n        top: 0,\n        backgroundColor: 'yellow',\n        padding: '50px',\n        fontSize: '20px',\n    },\n    bottomOfScreen: {\n\n        position: \"fixed\",\n        bottom: 1,\n    }\n}));\n\nexport const BeerList = (props) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [newBeerFromId, setnewBeerFromId] = useContext(ModalContext);\n    const [ExpandDescription, setExpandDescription] = React.useState(true);\n    const [ExpandPairings, setExpandPairings] = React.useState(true);\n    const handleClose = () => {\n        setOpen(false);\n        // setnewBeerFromId(0);        \n\n    };\n\n    const [selectedShowDescription, setSelectedShowDescription] = React.useState(false);\n\n    const [selectedShowPairings, setSelectedShowPairings] = React.useState(false);\n    const handleCollapseDescription = () => {\n        setSelectedShowDescription((prev) => !prev);\n    };\n    const handleCollapseDPairings = () => {\n        setSelectedShowPairings((prev) => !prev);\n    };\n    const [notifyAddToCart, setNotifyAddToCart] = React.useState(false);\n    const handleCloseNotifySuccess = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setNotifyAddToCart(false);\n    };\n\n\n    const [beerData] = useFetch(\n        \"https://api.punkapi.com/v2/beers\"\n\n    )\n    const [cart, setCart] = useContext(CartContext)\n\n    const addToCart = (e, id) => {\n        setnewBeerFromId(id);\n        const newBeer = beerData.filter(d => d.id === id)\n        const beer = {\n            name: newBeer.map(e => e.name).toString(),\n            price: 6,\n            image_url: newBeer.map(e => e.image_url).toString(),\n            tagline: newBeer.map(e => e.tagline).toString(),\n            id: newBeer.map(e => e.id).toString(),\n        }\n        setCart(curr => [...curr, beer]);\n        setNotifyAddToCart(true)\n        setCompleted(0)\n\n    }\n\n    const handleOpen = (e, id) => {\n        setOpen(true);\n        setnewBeerFromId(id);\n    };\n\n    const [completed, setCompleted] = React.useState(0);\n\n    React.useEffect(() => {\n        function progress() {\n            setCompleted((prevCompleted) => (prevCompleted >= 100 ? undefined : prevCompleted + 20));\n        }\n\n        const timer = setInterval(progress, 200);\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <Modal\n                aria-labelledby=\"spring-modal-title\"\n                aria-describedby=\"spring-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <Button onClick={handleClose} variant=\"contained\" color=\"primary\">close</Button>\n\n\n                    {beerData.filter(d => d.id === newBeerFromId).map(({ id, name, image_url, abv, tagline, description, food_pairing }) => (\n                        <Card className={classes.root2}>\n                            <div className={classes.details}>\n                                <CardContent className={classes.content}>\n                                    <Box component=\"p\" align=\"center\" fontWeight=\"fontWeightBold\">\n                                        <Typography variant=\"h4\">\n                                            {name}\n                                        </Typography>\n                                    </Box>\n                                    <Typography variant=\"body2\" component=\"p\" align=\"center\">\n                                        {tagline}\n                                    </Typography>\n                                    <Typography variant=\"body2\" component=\"p\" align=\"center\">\n                                        {abv}%\n                </Typography>\n                                    <br />\n                                    <Collapse in={ExpandDescription} timeout=\"auto\" unmountOnExit>\n                                        <div className={classes.container}>\n                                            <div className={classes.root}>\n                                                <div className={classes.container}>\n                                                    <Collapse in={selectedShowDescription}>\n                                                        Description:\n                                </Collapse>\n                                                    <Collapse in={selectedShowDescription} collapsedHeight={40}>\n                                                        <Typography variant=\"body2\" component=\"p\">\n                                                            {description}\n                                                        </Typography>\n                                                    </Collapse>\n                                                </div>\n                                                <ToggleButton onChange={handleCollapseDescription}\n                                                    style={{ border: 'none' }}\n                                                    selected={selectedShowDescription}>\n\n                                                    {selectedShowDescription ? 'Less' : 'More'}\n\n                                                </ToggleButton>\n                                            </div>\n                                        </div>\n                                    </Collapse>\n                                    <Collapse in={ExpandPairings} timeout=\"auto\" unmountOnExit>\n                                        <div className={classes.container}>\n                                            <div className={classes.root}>\n                                                <div className={classes.container}>\n                                                    <Collapse in={selectedShowPairings}>\n                                                        Perfect Pairings:\n                                                    </Collapse>\n                                                    <Collapse in={selectedShowPairings} collapsedHeight={40}>\n                                                        <Typography variant=\"body2\" component=\"p\">\n                                                            {food_pairing}\n                                                        </Typography>\n                                                    </Collapse>\n                                                </div>\n                                                <ToggleButton onChange={handleCollapseDPairings}\n                                                    style={{ border: 'none' }}\n                                                    selected={selectedShowPairings}>\n\n                                                    {selectedShowPairings ? 'Less' : 'More'}\n\n                                                </ToggleButton>\n                                                <Button onClick={((e) => addToCart(e, id))}\n                                                    fullWidth\n                                                    variant=\"contained\"\n                                                    color=\"secondary\"\n                                                    startIcon={<ShoppingCartOutlined />}\n                                                >\n                                                    Add To Cart\n                                                </Button>\n\n\n                                            </div>\n                                        </div>\n                                    </Collapse>\n                                </CardContent>\n                            </div>\n                            <CardMedia\n                                className={classes.cover}\n                                image={image_url}\n                                title={name}\n                            />\n                            <Snackbar open={notifyAddToCart} autoHideDuration={6000} onClose={handleCloseNotifySuccess}>\n                                <MuiAlert onClose={handleCloseNotifySuccess} severity=\"success\">\n                                    Added \"{name}\" to cart!\n                                </MuiAlert>\n                            </Snackbar>\n                        </Card>\n\n                    ))\n                    }\n\n\n                </Fade>\n            </Modal>\n            <Snackbar open={notifyAddToCart} autoHideDuration={6000} onClose={handleCloseNotifySuccess}>\n                <MuiAlert onClose={handleCloseNotifySuccess} severity=\"success\">\n                    Added  to cart!\n                                </MuiAlert>\n            </Snackbar>\n            {/* <CircularProgress variant=\"static\" value={completed} /> */}\n            <Grid container spacing={2}>\n                {beerData.map(({ id, name, image_url, abv }) => (\n                    <Grid item xs={4}>\n                        <Card variant=\"outlined\" id={id} height=\"200\">\n                            <CardActionArea value={id}\n                                onClick={((e) => handleOpen(e, id))}\n                            >\n                                <CardContent>\n                                    <CardMedia\n                                        className={classes.media}\n                                        image={image_url} ></CardMedia>\n                                    <Box variant=\"body2\" component=\"p\" align=\"center\" fontWeight=\"fontWeightBold\">\n                                        {name}\n                                    </Box>\n                                    <Typography variant=\"body2\" component=\"p\" align=\"center\">\n                                        {abv}%\n                                    </Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <Button\n                                variant=\"contained\"\n                                fullWidth={true}\n                                onClick={((e) => addToCart(e, id))}\n                                startIcon={\n                                    !notifyAddToCart ? <ShoppingCartOutlined /> :\n                                        isNaN(completed) ? <CheckCircleOutlineOutlined style={{ color: 'green' }} /> : <CircularProgress color=\"primary\" size={20} variant=\"static\" value={completed} />\n                                }\n                            >\n\n                                {/* {!notifyAddToCart ? \"£6.00\" : \n                                isNaN(completed)  ? <Typography style={{color: 'green'}} >Done</Typography> : \"£6.00\" } \n                             */}\n                                   £6.00\n\n                            </Button>\n                        </Card>\n                    </Grid>\n                ))\n                }\n            </Grid>\n        </div>\n    );\n\n}\n\n","/* eslint-disable linebreak-style */\nimport { createMuiTheme } from '@material-ui/core'\nimport { red, yellow, green } from '@material-ui/core/colors';\n\nconst colors = {\n    primary: red[500],\n    secondary: yellow[500],\n    status: green[500],\n\n};\n\nexport default createMuiTheme({\n    palette: {\n        type: 'dark',\n\n        primary: {\n            main: colors.primary,\n        },\n        secondary: {\n            main: colors.secondary,\n        },\n        status: {\n            main: colors.status,\n        },\n\n    },\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Grid, Card} from '@material-ui/core';\nimport Draggable from 'react-draggable'; \nimport CartContext from '../../CartContext'\nimport { Cart } from '../Cart/Cart';\nimport { BeerList } from '../BeerList/BeerList'\nimport { BeerModal } from '../BeerModal/BeerModal'\nimport { red, yellow, green } from '@material-ui/core/colors';\nimport theme from '../../theme';\n\nconst colors = {\n    primary: red[500],\n    secondary: yellow[500],\n    status: green[500],\n\n};\nconst innerTheme = createMuiTheme({\n    palette: {\n        type: 'light',\n\n        primary: {\n            main: colors.primary,\n        },\n        secondary: {\n            main: colors.secondary,\n        },\n        status: {\n            main: colors.status,\n        },\n\n    },\n});\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n    children: PropTypes.element,\n    in: PropTypes.bool.isRequired,\n    onEnter: PropTypes.func,\n    onExited: PropTypes.func,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    media: {\n        height: 150,\n        display: 'flex',\n\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    root2: {\n        display: 'flex',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        width: '100%',\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n    sticky: {\n        position: '-webkit-sticky',\n        position: 'sticky',\n        top: 0,\n        backgroundColor: 'yellow',\n        padding: '50px',\n        fontSize: '20px',\n    },\n    bottomOfScreen: {\n\n        position: \"fixed\",\n        bottom: theme.spacing.unit * -13,\n    }\n}));\n\nexport default function MainView() {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    };\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n\n        <div className={classes.root}>\n            <Paper className={classes.root} >\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                >\n                    <Tab {...a11yProps(0)} label=\"ALL\" />\n                    <Tab {...a11yProps(0)} label=\"PIZZA\" />\n                    <Tab  {...a11yProps(0)} label=\"STEAK\" />\n                </Tabs>\n            </Paper>\n            <ThemeProvider theme={innerTheme}>\n                <SwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={value}\n                    onChangeIndex={handleChangeIndex}\n                    style={{ backgroundColor: 'white' }}\n                >\n                    <TabPanel value={value} index={0} dir={theme.direction}\n                    >\n                        <Grid container spacing={2}\n                        >\n                            <CartContext.Consumer>\n                                {context => (\n                                        <BeerList />\n                                )}\n                            </CartContext.Consumer>\n                        </Grid>\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction}>\n                        Comming Soon...\n                </TabPanel>\n                    <TabPanel value={value} index={2} dir={theme.direction}>\n                        Comming Soon...\n                </TabPanel>\n                </SwipeableViews>\n            </ThemeProvider>\n        </div>\n    );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport DrinkIcon from '@material-ui/icons/LocalBar';\nimport FoodIcon from '@material-ui/icons/Restaurant';\nimport DiscountIcon from '@material-ui/icons/MoneyOff';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SubViews from '../SubViews/SubViews'\nimport CartContext from '../../CartContext'\nimport { Cart } from '../Cart/Cart';\n\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  indicator: {\n    backgroundColor: theme.palette.background.paper,\n    height: '3px',\n\n  }\n}));\n\n\nexport default function MainView() {\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [view, setview] = React.useState(0);\n\n  const handleChangeView = (event, newview) => {\n    setview(newview);\n  };\n  const [value, setValue] = React.useState(0);\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return (\n    <div className={classes.root}>\n      <CartContext.Consumer>{context => (<Cart />)}</CartContext.Consumer>\n      <AppBar position=\"sticky\" color=\"default\" color=\"primary\">\n        <Tabs\n          value={view}\n          onChange={handleChangeView}\n          aria-label=\"simple tabs example\"\n          variant=\"fullWidth\"\n          classes={{\n            indicator: classes.indicator\n          }}>\n          >\n          <Tab icon={<DrinkIcon />} {...a11yProps(0)} />\n          <Tab icon={<FoodIcon />} {...a11yProps(0)} />\n          <Tab icon={<DiscountIcon />}{...a11yProps(0)} />\n          <Tab icon={<SearchIcon />} {...a11yProps(0)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={view} index={0}>\n        <SubViews />\n      </TabPanel>\n      <TabPanel value={view} index={1}>\n      <SubViews />\n      </TabPanel>\n      <TabPanel value={view} index={2}>\n        <SubViews />\n      </TabPanel>\n\n    </div>\n  );\n}","import React from 'react';\nimport MainView from './components/MainView/MainView';\nimport {CartProvider, CartContext} from './CartProvider'\nimport {ModalProvider, ModalContext} from './ModalProvider'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CartProvider>\n        <ModalProvider>\n          <MainView />\n        </ModalProvider>\n      </CartProvider>\n    </div>\n  );\n}\n\nexport default App;\n ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport theme from './theme';\nimport { ThemeProvider } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst GlobalCss = withStyles({\n  // @global is handled by jss-plugin-global.\n  '@global': {\n    // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\n    '.MuiBox-root': {\n      padding: '0',\n    },\n  },\n})(() => null);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n    <GlobalCss />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}