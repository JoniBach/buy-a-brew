{"version":3,"sources":["CartContext.jsx","CartProvider.jsx","ModalProvider.jsx","components/SubViews/hooks.js","components/BeerList/BeerList.jsx","components/SubViews/SubViews.jsx","components/Cart/Cart.jsx","components/MainView/MainView.jsx","App.js","serviceWorker.js","theme.js","index.js"],"names":["CartContext","React","createContext","CartProvider","props","useState","cart","setCart","Provider","value","children","ModalContext","ModalProvider","newBeerFromId","setnewBeerFromId","useFetch","url","data","setData","loading","setLoading","a","fetch","response","json","useEffect","fetchUrl","Fade","forwardRef","ref","open","in","onEnter","onExited","other","style","useSpring","from","opacity","to","onStart","onRest","div","MuiAlert","Alert","elevation","variant","useStyles","makeStyles","theme","root","backgroundColor","palette","background","paper","media","height","display","modal","alignItems","justifyContent","border","boxShadow","shadows","padding","spacing","root2","details","flexDirection","content","flex","cover","width","controls","paddingLeft","paddingBottom","playIcon","sticky","position","bottomOfScreen","bottom","BeerList","classes","setOpen","useContext","ExpandDescription","ExpandPairings","handleClose","selectedShowDescription","setSelectedShowDescription","selectedShowPairings","setSelectedShowPairings","handleCollapseDescription","prev","handleCollapseDPairings","notifyAddToCart","setNotifyAddToCart","handleCloseNotifySuccess","event","reason","beerData","addToCart","e","id","newBeer","filter","d","beer","name","map","toString","price","image_url","tagline","curr","setCompleted","completed","timer","setInterval","prevCompleted","undefined","clearInterval","className","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Button","onClick","color","abv","description","food_pairing","Card","CardContent","Box","component","align","fontWeight","Collapse","unmountOnExit","container","collapsedHeight","Typography","ToggleButton","onChange","selected","fullWidth","startIcon","ShoppingCartOutlined","CardMedia","image","title","Snackbar","autoHideDuration","severity","Grid","item","xs","CardActionArea","handleOpen","textAlign","LinearProgress","size","marginTop","marginBottom","isNaN","CheckCircleOutlineOutlined","CircularProgress","colors","primary","red","secondary","yellow","status","green","innerTheme","createMuiTheme","type","main","TabPanel","index","role","hidden","p","a11yProps","MainView","useTheme","setValue","Paper","Tabs","newValue","indicatorColor","textColor","centered","Tab","label","ThemeProvider","axis","direction","onChangeIndex","dir","Consumer","context","maxWidth","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","Cart","expanded","setExpanded","totalPrice","reduce","acc","NotifyCheckoutComplete","setNotifyCheckoutComplete","onFirstLoad","setOnFirstLoad","handleCloseNotifyCheckoutComplete","oldCompleted","diff","Math","random","min","AppBar","Toolbar","m","IconButton","aria-expanded","aria-label","ShoppingCart","length","TableContainer","Table","TableBody","TableRow","key","TableCell","scope","Badge","badgeContent","src","alt","Delete","indicator","view","setview","newview","icon","App","Boolean","window","location","hostname","match","GlobalCss","withStyles","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e06d24c7.chunk.js","sourcesContent":["import React from 'react';\n\n// this is the equivalent to the createStore method of Redux\n// https://redux.js.org/api/createstore\n\nconst CartContext = React.createContext();\n\nexport default CartContext;","\nimport React, { useState } from 'react';\n\nexport const CartContext = React.createContext();\n\nexport const CartProvider = (props) => {\nconst [cart, setCart] = useState([]);\n\n        return (\n            <CartContext.Provider value={[cart, setCart]}>\n                {props.children}\n            </CartContext.Provider>\n        );\n\n}\n\n","import React, { useState } from 'react';\nexport const ModalContext = React.createContext();\nexport const ModalProvider = (props) => {\nconst [newBeerFromId, setnewBeerFromId] = useState(false);\n\n        return (\n            <ModalContext.Provider value={[newBeerFromId, setnewBeerFromId]}>\n                {props.children}\n            </ModalContext.Provider>\n        );\n\n}\n\n","// hooks.js\nimport { useState, useEffect } from \"react\";\nfunction useFetch(url) {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  async function fetchUrl() {\n    const response = await fetch(url);\n    const json = await response.json();\n    setData(json);\n    setLoading(false);\n  }\n  useEffect(() => {\n    fetchUrl();\n  }, []);\n  return [data, loading];\n}\nexport { useFetch };","import { LinearProgress, Typography, Backdrop, Box, Button, Card, CardActionArea, CardContent, CardMedia, CircularProgress, Collapse, Grid, Modal, Snackbar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CheckCircleOutlineOutlined, ShoppingCartOutlined } from '@material-ui/icons';\nimport { Alert, ToggleButton } from '@material-ui/lab';\nimport React, { useContext } from 'react';\nimport { animated, useSpring } from 'react-spring/web.cjs';\nimport { CartContext } from '../../CartProvider';\nimport { ModalContext } from '../../ModalProvider';\nimport { useFetch } from \"../SubViews/hooks\";\n\n\nconst Fade = React.forwardRef(function Fade(props, ref) {\n    const { in: open, children, onEnter, onExited, ...other } = props;\n    const style = useSpring({\n        from: { opacity: 0 },\n        to: { opacity: open ? 1 : 0 },\n        onStart: () => {\n            if (open && onEnter) {\n                onEnter();\n            }\n        },\n        onRest: () => {\n            if (!open && onExited) {\n                onExited();\n            }\n        },\n    });\n\n    return (\n        <animated.div ref={ref} style={style} {...other}>\n            {children}\n        </animated.div>\n    );\n});\n\nfunction MuiAlert(props) {\n    return <Alert elevation={6} variant=\"filled\"  {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    media: {\n        height: 220,\n        display: 'flex',\n\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    root2: {\n        display: 'flex',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        width: '100%',\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n    sticky: {\n        position: '-webkit-sticky',\n        position: 'sticky',\n        top: 0,\n        backgroundColor: 'yellow',\n        padding: '50px',\n        fontSize: '20px',\n    },\n    bottomOfScreen: {\n\n        position: \"fixed\",\n        bottom: 1,\n    }\n}));\n\nexport const BeerList = (props) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [newBeerFromId, setnewBeerFromId] = useContext(ModalContext);\n    const [ExpandDescription] = React.useState(true);\n    const [ExpandPairings] = React.useState(true);\n    const handleClose = () => {\n        setOpen(false);\n        // setnewBeerFromId(0);        \n\n    };\n\n    const [selectedShowDescription, setSelectedShowDescription] = React.useState(false);\n\n    const [selectedShowPairings, setSelectedShowPairings] = React.useState(false);\n    const handleCollapseDescription = () => {\n        setSelectedShowDescription((prev) => !prev);\n    };\n    const handleCollapseDPairings = () => {\n        setSelectedShowPairings((prev) => !prev);\n    };\n    const [notifyAddToCart, setNotifyAddToCart] = React.useState(false);\n    const handleCloseNotifySuccess = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setNotifyAddToCart(false);\n    };\n\n\n    const [beerData] = useFetch(\n        \"https://api.punkapi.com/v2/beers\"\n\n    )\n    const [cart, setCart] = useContext(CartContext)\n\n    const addToCart = (e, id) => {\n        setnewBeerFromId(id);\n        const newBeer = beerData.filter(d => d.id === id)\n        const beer = {\n            name: newBeer.map(e => e.name).toString(),\n            price: 6,\n            image_url: newBeer.map(e => e.image_url).toString(),\n            tagline: newBeer.map(e => e.tagline).toString(),\n            id: newBeer.map(e => e.id).toString(),\n        }\n        setCart(curr => [...curr, beer]);\n        setNotifyAddToCart(true)\n        setCompleted(0)\n\n    }\n\n    const handleOpen = (e, id) => {\n        setOpen(true);\n        setnewBeerFromId(id);\n    };\n\n    const [completed, setCompleted] = React.useState(0);\n\n    React.useEffect(() => {\n        function progress() {\n            setCompleted((prevCompleted) => (prevCompleted >= 100 ? undefined : prevCompleted + 30));\n        }\n\n        const timer = setInterval(progress, 200);\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <Modal\n                aria-labelledby=\"spring-modal-title\"\n                aria-describedby=\"spring-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <Button onClick={handleClose} variant=\"contained\" color=\"primary\">close</Button>\n\n\n                    {beerData.filter(d => d.id === newBeerFromId).map(({ id, name, image_url, abv, tagline, description, food_pairing }) => (\n                        <Card className={classes.root2}>\n                            <div className={classes.details}>\n                                <CardContent className={classes.content}>\n\n                                    <Box component=\"p\" align=\"center\" fontWeight=\"fontWeightBold\">\n                                        <Box variant=\"h4\">\n                                            {name}\n                                        </Box>\n                                    </Box>\n                                    <Box variant=\"body2\" component=\"p\" align=\"center\">\n                                        {tagline}\n                                    </Box>\n                                    <Box variant=\"body2\" component=\"p\" align=\"center\">\n                                        {abv}%\n                                    </Box>\n                                    <hr />\n                                    <Collapse in={ExpandDescription} timeout=\"auto\" unmountOnExit>\n                                        <div className={classes.container}>\n                                            <div className={classes.root}>\n                                                <div className={classes.container}>\n                                                    <Collapse in={selectedShowDescription}>\n                                                        Description:\n                                </Collapse>\n                                                    <Collapse in={selectedShowDescription} collapsedHeight={40}>\n                                                        <Typography variant=\"body2\" component=\"p\">\n                                                            {description}\n                                                        </Typography>\n                                                    </Collapse>\n                                                </div>\n                                                <ToggleButton onChange={handleCollapseDescription}\n                                                    style={{ border: 'none' }}\n                                                    selected={selectedShowDescription}>\n\n                                                    {selectedShowDescription ? 'Less' : 'More'}\n\n                                                </ToggleButton>\n                                            </div>\n                                        </div>\n                                    </Collapse>\n                                    <Collapse in={ExpandPairings} timeout=\"auto\" unmountOnExit>\n                                        <div className={classes.container}>\n                                            <div className={classes.root}>\n                                                <div className={classes.container}>\n                                                    <Collapse in={selectedShowPairings}>\n                                                        Perfect Pairings:\n                                                    </Collapse>\n                                                    <Collapse in={selectedShowPairings} collapsedHeight={40}>\n                                                        <Typography variant=\"body2\" component=\"p\">\n                                                            {food_pairing}\n                                                        </Typography>\n                                                    </Collapse>\n                                                </div>\n                                                <ToggleButton onChange={handleCollapseDPairings}\n                                                    style={{ border: 'none' }}\n                                                    selected={selectedShowPairings}>\n\n                                                    {selectedShowPairings ? 'Less' : 'More'}\n\n                                                </ToggleButton>\n                                                <Button onClick={((e) => addToCart(e, id))}\n                                                    fullWidth\n                                                    variant=\"contained\"\n                                                    color=\"secondary\"\n                                                    startIcon={<ShoppingCartOutlined />}\n                                                >\n                                                    Add To Cart\n                                                </Button>\n\n\n                                            </div>\n                                        </div>\n                                    </Collapse>\n                                </CardContent>\n                            </div>\n                            <CardMedia\n                                className={classes.cover}\n                                image={image_url}\n                                title={name}\n                            />\n                            <Snackbar open={notifyAddToCart} autoHideDuration={6000} onClose={handleCloseNotifySuccess}>\n                                <MuiAlert onClose={handleCloseNotifySuccess} severity=\"success\">\n                                    Added \"{name}\" to cart!\n                                </MuiAlert>\n                            </Snackbar>\n                        </Card>\n\n                    ))\n                    }\n\n\n                </Fade>\n            </Modal>\n            <Snackbar open={notifyAddToCart} autoHideDuration={6000} onClose={handleCloseNotifySuccess}>\n                <MuiAlert onClose={handleCloseNotifySuccess} severity=\"success\">\n                    Added  to cart!\n                                </MuiAlert>\n            </Snackbar>\n            {/* <CircularProgress variant=\"static\" value={completed} /> */}\n            <Grid container spacing={2}>\n                {beerData.map(({ id, name, image_url, abv }) => (\n                    <Grid item xs={4}>\n                        <Card variant=\"outlined\" id={id} height=\"200\">\n                            <CardActionArea value={id}\n                                onClick={((e) => handleOpen(e, id))}\n                            >\n                                <CardContent>\n                                    <CardMedia\n                                        className={classes.media}\n                                        image={image_url} ></CardMedia>\n                                    <Box\n                                        display=\"flex\"\n\n                                        height={150}\n                                        alignItems=\"center\"\n                                    >\n                                        <Typography variant=\"body2\" style={{ textAlign: 'center', width: '100%' }}>\n                                            {name}\n                                            \n                                            {!completed ? <hr /> : <LinearProgress size={10} variant=\"determinate\" value={completed} style={{marginTop: 6, marginBottom: 6}} />}\n\n                                            {abv}%\n                                      </Typography>\n\n\n\n                                    </Box>\n                                </CardContent>\n                            </CardActionArea>\n                            <Button\n                                variant=\"contained\"\n                                fullWidth={true}\n                                onClick={((e) => addToCart(e, id))}\n                                startIcon={\n                                    !notifyAddToCart ? <ShoppingCartOutlined /> :\n                                        isNaN(completed) ? <CheckCircleOutlineOutlined style={{ color: 'green' }} /> : <CircularProgress color=\"primary\" size={20} variant=\"static\" value={completed} />\n                                }\n                            >\n                                £6.00\n                            </Button>\n                        </Card>\n                    </Grid>\n                ))\n                }\n            </Grid>\n        </div>\n    );\n\n}\n\n","import { Grid } from '@material-ui/core';\n\nimport { green, red, yellow } from '@material-ui/core/colors';\nimport Paper from '@material-ui/core/Paper';\nimport { createMuiTheme, makeStyles, ThemeProvider, useTheme } from '@material-ui/core/styles';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport CartContext from '../../CartContext';\nimport { BeerList } from '../BeerList/BeerList';\n\nconst colors = {\n    primary: red[500],\n    secondary: yellow[500],\n    status: green[500],\n\n};\nconst innerTheme = createMuiTheme({\n    palette: {\n        type: 'light',\n\n        primary: {\n            main: colors.primary,\n        },\n        secondary: {\n            main: colors.secondary,\n        },\n        status: {\n            main: colors.status,\n        },\n\n    },\n});\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Box>{children}</Box>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    // children: PropTypes.node,\n    // index: PropTypes.any.isRequired,\n    // value: PropTypes.any.isRequired,\n    // children: PropTypes.element,\n    // in: PropTypes.bool.isRequired,\n    // onEnter: PropTypes.func,\n    // onExited: PropTypes.func,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    media: {\n        height: 150,\n        display: 'flex',\n\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    root2: {\n        display: 'flex',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        width: '100%',\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n    sticky: {\n        position: '-webkit-sticky',\n        position: 'sticky',\n        top: 0,\n        backgroundColor: 'yellow',\n        padding: '50px',\n        fontSize: '20px',\n    },\n    bottomOfScreen: {\n\n        position: \"fixed\",\n        bottom: theme.spacing(-13),\n    }\n}));\n\nexport default function MainView() {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    };\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n\n        <div className={classes.root}>\n            <Paper className={classes.root} >\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                >\n                    <Tab {...a11yProps(0)} label=\"ALL\" />\n                    <Tab {...a11yProps(0)} label=\"PIZZA\" />\n                    <Tab  {...a11yProps(0)} label=\"STEAK\" />\n                </Tabs>\n            </Paper>\n            <ThemeProvider theme={innerTheme}>\n                <SwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={value}\n                    onChangeIndex={handleChangeIndex}\n                    style={{ backgroundColor: 'white' }}\n                >\n                    <TabPanel value={value} index={0} dir={theme.direction}\n                    >\n                        <Grid container spacing={2}\n                        >\n                            <CartContext.Consumer>\n                                {context => (\n                                        <BeerList />\n                                )}\n                            </CartContext.Consumer>\n                        </Grid>\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction}>\n                        Comming Soon...\n                </TabPanel>\n                    <TabPanel value={value} index={2} dir={theme.direction}>\n                        Comming Soon...\n                </TabPanel>\n                </SwipeableViews>\n            </ThemeProvider>\n        </div>\n    );\n}","import {Typography, AppBar, Badge, Button, IconButton, LinearProgress, Paper, Snackbar, Table, TableBody, TableCell, TableContainer, TableRow, Toolbar, Box } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport { red } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Delete, ShoppingCart } from '@material-ui/icons';\nimport { Alert } from '@material-ui/lab';\nimport React, { useContext } from 'react';\nimport { CartContext } from '../../CartProvider';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n    bottomOfScreen: {\n\n        flex: 1\n    }\n}));\n\nfunction MuiAlert(props) {\n    return <Alert elevation={6} variant=\"filled\"  {...props} />;\n}\n\n\nexport const Cart = () => {\n    const classes = useStyles();\n\n    const [cart] = useContext(CartContext)\n    const [newBeerFromId, setnewBeerFromId] = useContext(CartContext);\n    const removeBeer = () => {\n        setnewBeerFromId([])\n    }\n    const [expanded, setExpanded] = React.useState(false);\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n    const totalPrice = cart.reduce((acc, curr) => acc + curr.price, 0);\n    const [completed, setCompleted] = React.useState(100);\n    const [NotifyCheckoutComplete, setNotifyCheckoutComplete] = React.useState(false);\n    const [onFirstLoad, setOnFirstLoad] = React.useState();\n    const handleCloseNotifyCheckoutComplete = (reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setNotifyCheckoutComplete(false);\n    };\n    const submitBasket = (e, id) => {\n        setNotifyCheckoutComplete(false)\n        setOnFirstLoad(1)\n        setCompleted(0)\n    }\n    React.useEffect(() => {\n        function progress() {\n            setCompleted((oldCompleted) => {\n                if (oldCompleted === 100) {\n                    setnewBeerFromId([])\n                    setNotifyCheckoutComplete(true)\n                    return undefined;\n                }\n                const diff = Math.random() * 10;\n                return Math.min(oldCompleted + diff, 100);\n            });\n        }\n\n        const timer = setInterval(progress, 500);\n\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n    return (\n\n        <div>\n            <div className={classes.bottomOfScreen}>\n                <AppBar position=\"static\" >\n                    <Toolbar>\n                        <Typography variant=\"h5\" color=\"secondary\">£{totalPrice}</Typography>\n                        <Box width=\"100%\" align=\"center\" m={2}>Buy-A-Brew</Box>\n\n                        <IconButton\n                    \n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            aria-label=\"show more\"\n\n                        >\n                            <ShoppingCart />\n                        </IconButton>\n\n\n                    </Toolbar>\n                </AppBar>\n            </div>\n            {onFirstLoad !== 1 ? null :\n                <Snackbar open={NotifyCheckoutComplete} autoHideDuration={6000} onClose={handleCloseNotifyCheckoutComplete}>\n                    <MuiAlert onClose={handleCloseNotifyCheckoutComplete} severity=\"success\">\n                        Purchase Successful\n                    </MuiAlert>\n                </Snackbar>\n            }\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                <Typography style={{ color: 'white' }} align=\"center\" variant=\"h6\">{cart.length} items in cart</Typography>\n\n                <TableContainer component={Paper}>\n                    <Table >\n\n                        <TableBody >\n                            {newBeerFromId.map(({ id, name, price, image_url, abv, tagline, description, food_pairing }) => (\n                                <TableRow key={id}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        <Badge badgeContent={\"£\" + price} color=\"secondary\">\n                                            <img src={image_url} alt={name} height=\"50\" width=\"20\"></img>\n                                        </Badge>\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                        {name}\n                                        <br />\n                                        {/* {tagline} */}\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        {/* TODO: impkiment product counter */}\n                                        {/* <ButtonGroup>\n                                    <Box display=\"flex\" flexDirection=\"row\" >\n                                        <IconButton variant=\"contained\" color=\"secondary\" onClick={() => setCount(count - 1)}>\n                                            <Remove />\n                                        </IconButton>\n                                        <Box width={30} style={{ textAlign: 'center', paddingTop: 10 }}>{count}</Box>\n\n                                        <IconButton width={10} variant=\"contained\" color=\"secondary\" onClick={() => setCount(count + 1)}>\n                                            <Add />\n                                        </IconButton>\n                                    </Box>\n                                    </ButtonGroup> */}\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <IconButton aria-label=\"delete\" onClick={e => removeBeer(e, id)} >\n                                            <Delete />\n                                        </IconButton>\n                                    </TableCell>\n\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                {totalPrice === 0 ?\n                    <Typography style={{ color: 'white' }} align=\"center\" variant=\"h6\">Add an item...</Typography>\n                    :\n                    <Box m={3}>\n                        <Typography style={{ color: 'white' }} align=\"center\" variant=\"h6\">Total: £{totalPrice}</Typography>\n                        {\n                        !completed ? <div /> : <LinearProgress variant=\"determinate\" value={completed} />\n                        }\n                        <Button\n                            onClick={submitBasket}\n                            fullWidth variant=\"contained\" color=\"secondary\">\n                            {completed <= 100\n                                ?\n                                \"processing\"\n                                :\n                                \"Confirm Payment\"\n                            }\n                        </Button>\n                    </Box>\n                }\n            </Collapse>\n        </div>\n    )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport DrinkIcon from '@material-ui/icons/LocalBar';\nimport FoodIcon from '@material-ui/icons/Restaurant';\nimport DiscountIcon from '@material-ui/icons/MoneyOff';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SubViews from '../SubViews/SubViews'\nimport CartContext from '../../CartContext'\nimport { Cart } from '../Cart/Cart';\n\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Box>{children}</Box>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  // children: PropTypes.node,\n  // index: PropTypes.any.isRequired,\n  // value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  indicator: {\n    backgroundColor: theme.palette.background.paper,\n    height: '3px',\n\n  }\n}));\n\n\nexport default function MainView() {\n\n  const classes = useStyles();\n  const [view, setview] = React.useState(0);\n\n  const handleChangeView = (event, newview) => {\n    setview(newview);\n  };\n  return (\n    <div className={classes.root}>\n      <CartContext.Consumer>{context => (<Cart />)}</CartContext.Consumer>\n      <AppBar position=\"sticky\" color=\"default\" color=\"primary\">\n        <Tabs\n          value={view}\n          onChange={handleChangeView}\n          aria-label=\"simple tabs example\"\n          variant=\"fullWidth\"\n          classes={{\n            indicator: classes.indicator\n          }}>\n          >\n          <Tab icon={<DrinkIcon />} {...a11yProps(0)} />\n          <Tab icon={<FoodIcon />} {...a11yProps(0)} />\n          <Tab icon={<DiscountIcon />}{...a11yProps(0)} />\n          <Tab icon={<SearchIcon />} {...a11yProps(0)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={view} index={0}>\n        <SubViews />\n      </TabPanel>\n      <TabPanel value={view} index={1}>\n      <SubViews />\n      </TabPanel>\n      <TabPanel value={view} index={2}>\n        <SubViews />\n      </TabPanel>\n\n    </div>\n  );\n}","import React from 'react';\nimport MainView from './components/MainView/MainView';\nimport {CartProvider} from './CartProvider'\nimport {ModalProvider} from './ModalProvider'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CartProvider>\n        <ModalProvider>\n          <MainView />\n        </ModalProvider>\n      </CartProvider>\n    </div>\n  );\n}\n\nexport default App;\n ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable linebreak-style */\nimport { createMuiTheme } from '@material-ui/core'\nimport { red, yellow, green } from '@material-ui/core/colors';\n\nconst colors = {\n    primary: red[500],\n    secondary: yellow[500],\n    status: green[500],\n\n};\n\nexport default createMuiTheme({\n    palette: {\n        type: 'dark',\n\n        primary: {\n            main: colors.primary,\n        },\n        secondary: {\n            main: colors.secondary,\n        },\n        status: {\n            main: colors.status,\n        },\n\n    },\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport theme from './theme';\nimport { ThemeProvider } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst GlobalCss = withStyles({\n  // @global is handled by jss-plugin-global.\n  '@global': {\n    // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\n    '.MuiBox-root': {\n      padding: '0',\n    },\n  },\n})(() => null);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n    <GlobalCss />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}