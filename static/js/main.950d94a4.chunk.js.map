{"version":3,"sources":["CartContext.jsx","CartProvider.jsx","components/Cart/Cart.jsx","components/SubViews/hooks.js","components/BeerList/BeerList.jsx","components/BeerModal/BeerModal.jsx","components/SubViews/SubViews.jsx","components/MainView/MainView.jsx","App.js","serviceWorker.js","theme.js","index.js"],"names":["CartContext","React","createContext","CartProvider","props","useState","cart","setCart","Provider","value","children","useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","bottomOfScreen","flex","Cart","classes","useContext","newBeerFromId","setnewBeerFromId","console","log","expanded","setExpanded","totalPrice","reduce","acc","curr","price","className","AppBar","position","Toolbar","Typography","variant","color","Box","width","align","m","IconButton","onClick","aria-expanded","aria-label","ShoppingCart","map","name","Collapse","in","timeout","unmountOnExit","style","length","TableContainer","component","Paper","Table","TableBody","id","image_url","abv","tagline","description","food_pairing","TableRow","key","TableCell","scope","Badge","badgeContent","src","alt","e","Delete","useFetch","url","data","setData","loading","setLoading","a","fetch","response","json","useEffect","fetchUrl","palette","background","paper","display","BeerList","setOpen","beerData","Grid","container","spacing","item","xs","Card","CardActionArea","handleOpen","CardContent","CardMedia","image","fontWeight","Button","newBeer","filter","d","beer","toString","addToCart","Fade","forwardRef","ref","open","onEnter","onExited","other","useSpring","from","opacity","to","onStart","onRest","div","modal","alignItems","justifyContent","border","boxShadow","shadows","padding","root2","details","flexDirection","content","cover","controls","paddingLeft","paddingBottom","playIcon","sticky","bottom","unit","MuiAlert","Alert","elevation","BeerModal","ExpandDescription","ExpandPairings","handleClose","selectedShowDescription","setSelectedShowDescription","selectedShowPairings","setSelectedShowPairings","handleCollapseDescription","prev","handleCollapseDPairings","notifyAddToCart","setNotifyAddToCart","handleCloseNotifySuccess","event","reason","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","collapsedHeight","ToggleButton","onChange","selected","title","Snackbar","autoHideDuration","severity","innerTheme","createMuiTheme","type","TabPanel","index","role","hidden","p","a11yProps","MainView","useTheme","setValue","Tabs","newValue","indicatorColor","textColor","centered","Tab","label","ThemeProvider","axis","direction","onChangeIndex","dir","Consumer","context","indicator","view","setview","newview","icon","App","Boolean","window","location","hostname","match","colors","primary","secondary","yellow","status","green","main","GlobalCss","withStyles","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.950d94a4.chunk.js","sourcesContent":["import React from 'react';\n\n// this is the equivalent to the createStore method of Redux\n// https://redux.js.org/api/createstore\n\nconst CartContext = React.createContext();\n\nexport default CartContext;","// import CartContext from './CartContext';\nimport React, {useFetch, useState} from 'react'\n\nexport const CartContext = React.createContext();\n\nexport const CartProvider = (props) => {\nconst [cart, setCart] = useState([]);\nconst [open, setOpen] = React.useState(false);\nconst [newBeerFromId, setnewBeerFromId] = React.useState(0);\n\n    // const [beers] = useFetch(\n    //     \"https://api.punkapi.com/v2/beers\"\n    // )\n    \n\n\n        return (\n            // newBeerFromId, setnewBeerFromId \n            <CartContext.Provider value={[cart, setCart]}>\n                {props.children}\n            </CartContext.Provider>\n        );\n\n}\n\n","import React, { useContext, setState, useState } from 'react';\nimport { CartContext } from '../../CartProvider';\nimport { AppBar, Toolbar, Typography, Grid, Card, CardContent, CardMedia, Button, Chip, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Badge, Paper, Box, IconButton, ButtonGroup } from '@material-ui/core';\nimport { Remove, Add, Delete, ShoppingCart } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Collapse from '@material-ui/core/Collapse';\nimport { red } from '@material-ui/core/colors';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n    bottomOfScreen: {\n\n        flex: 1\n    }\n}));\n\nexport const Cart = () => {\n    const classes = useStyles();\n\n    const [cart, setCart] = useContext(CartContext)\n    const [count, setCount] = useState([]);\n    const beerPrice = 4;\n    const [newBeerFromId, setnewBeerFromId] = useContext(CartContext);\n    console.log('Selected beer id', newBeerFromId)\n\n    const removeBeer = (e, id) => {\n        setnewBeerFromId([])\n    }\n\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    const totalPrice = cart.reduce((acc, curr) => acc + curr.price, 0);\n    return (\n\n        <div>\n            <div className={classes.bottomOfScreen}>\n            <AppBar position=\"static\" >\n                    <Toolbar>\n                        <Typography variant=\"h5\" color=\"secondary\">£{totalPrice}</Typography>\n                        <Box width=\"100%\" align=\"center\"  m={2}>Buy-A-Brew</Box>\n\n                        <IconButton\n                            // className={clsx(classes.expand, {\n                            //     [classes.expandOpen]: expanded,\n                            // })}\n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            aria-label=\"show more\"\n\n                        >\n                            <ShoppingCart />\n                        </IconButton>\n\n                    </Toolbar>\n                </AppBar>\n            </div>\n                \n\n            {\n                newBeerFromId.map(({ name, price }) => (\n\n                    <div />\n                ))\n\n            }\n\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                <Typography style={{ color: 'white' }} align=\"center\" variant=\"h6\">{cart.length} items in cart</Typography>\n\n                <TableContainer component={Paper}>\n                    <Table >\n\n                        <TableBody >\n                            {newBeerFromId.map(({ id, name, price, image_url, abv, tagline, description, food_pairing }) => (\n                                <TableRow key={id}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        <Badge badgeContent={\"£\" + price} color=\"secondary\">\n                                            <img src={image_url} alt={name} height=\"50\" width=\"20\"></img>\n                                        </Badge>\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                        {name}\n                                        <br />\n                                        {/* {tagline} */}\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        {/* <ButtonGroup>\n                                    <Box display=\"flex\" flexDirection=\"row\" >\n                                        <IconButton variant=\"contained\" color=\"secondary\" onClick={() => setCount(count - 1)}>\n                                            <Remove />\n                                        </IconButton>\n                                        <Box width={30} style={{ textAlign: 'center', paddingTop: 10 }}>{count}</Box>\n\n                                        <IconButton width={10} variant=\"contained\" color=\"secondary\" onClick={() => setCount(count + 1)}>\n                                            <Add />\n                                        </IconButton>\n                                    </Box>\n                                    </ButtonGroup> */}\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <IconButton aria-label=\"delete\" onClick={e => removeBeer(e, id)} >\n                                            <Delete />\n                                        </IconButton>\n                                    </TableCell>\n\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Collapse>\n\n        </div>\n\n    )\n}","// hooks.js\nimport { useState, useEffect } from \"react\";\nfunction useFetch(url) {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  async function fetchUrl() {\n    const response = await fetch(url);\n    const json = await response.json();\n    setData(json);\n    setLoading(false);\n  }\n  useEffect(() => {\n    fetchUrl();\n  }, []);\n  return [data, loading];\n}\nexport { useFetch };","// import CartContext from './CartContext';\nimport React, { useState, useContext } from 'react'\nimport {CartContext} from '../../CartProvider'\n\nimport { Beer } from '../Beer/Beer'\nimport { useFetch } from \"../SubViews/hooks\";\nimport { Button, Grid, Card, CardContent, CardMedia, CardActionArea, Box, Typography } from '@material-ui/core';\nimport { makeStyles, useTheme, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    media: {\n        height: 150,\n        display: 'flex',\n\n    },\n}));\n\nexport const BeerList = (props) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(0);\n    const [newBeerFromId, setnewBeerFromId] = React.useState();\n\n    const database = [\n        { name: \"beer 01\", price: 4, id: 1 }\n    ]\n\n    const [beerData] = useFetch(\n        \"https://api.punkapi.com/v2/beers\"\n        \n    )\n    const [cart, setCart] = useContext(CartContext)\n\n    const addToCart = (e, id) => {\n        setnewBeerFromId(id);\n        console.log(\"clicked add to cart\", id)\n\n        const newBeer = beerData.filter(d => d.id === id)\n        console.log('logging new beer',newBeer.map(e => e.name))\n        // {beerData.filter(d => d.id === 1).map(({ id, name, image_url, abv, tagline, description, food_pairing }) => (\n\n\n        const beer = {\n            name: newBeer.map(e => e.name).toString(), \n            price: 6,\n            image_url: newBeer.map(e => e.image_url).toString() ,\n            tagline: newBeer.map(e => e.tagline).toString() \n\n        \n        }\n        console.log('new beew', beer)\n        setCart(curr => [...curr, beer]);\n\n    }\n    // console.log('thisIsBeerData',beerData)\n\n    const handleOpen = (e, id) => {\n        setOpen(true);\n        console.log('open: ', id);\n        setnewBeerFromId(id);\n    };\n\n    return (\n        <div className={classes.root}>\n            {/* {\n                    beerData.map(({ id, name })  => (\n                        <Beer name={name} price={4} key={id} />\n                    ))\n                }\n      {\n                    database.map(item => (\n                        <Beer name={item.name} price={item.price} key={item.id} />\n                    ))\n                } */}\n            <Grid container spacing={2}>\n\n                {beerData.map(({ id, name, image_url, abv }) => (\n\n                    <Grid item xs={4}>\n                        <Card variant=\"outlined\" id={id}>\n                            <CardActionArea value={id}\n                            onClick={((e) => handleOpen(e, id))}\n                            >\n                                <CardContent>\n                                    <CardMedia\n                                        className={classes.media}\n                                        image={image_url} ></CardMedia>\n                                    <Box variant=\"body2\" component=\"p\" align=\"center\" fontWeight=\"fontWeightBold\">\n                                        {name}\n                                    </Box>\n                                    <Typography variant=\"body2\" component=\"p\" align=\"center\">\n                                        {abv}%\n                </Typography>\n\n                                </CardContent>\n                            </CardActionArea>\n                            <Button onClick={((e) => addToCart(e, id))}>Add to cart</Button>\n\n                        </Card>\n                    </Grid>\n\n                ))\n                }\n            </Grid>\n\n        </div>\n    );\n\n}\n\n","// import CartContext from './CartContext';\nimport React, { useState, useContext } from 'react'\nimport {CartContext} from '../../CartProvider'\nimport { Beer } from '../Beer/Beer'\nimport { useFetch } from \"../SubViews/hooks\";\nimport { Button, Modal, Backdrop, Snackbar, Grid, Card, CardContent, CardMedia, Collapse, CardActionArea, Box, Typography } from '@material-ui/core';\nimport { makeStyles, useTheme, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport {Alert, ToggleButton} from '@material-ui/lab';\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\n    \nconst Fade = React.forwardRef(function Fade(props, ref) {\n    const { in: open, children, onEnter, onExited, ...other } = props;\n    const style = useSpring({\n        from: { opacity: 0 },\n        to: { opacity: open ? 1 : 0 },\n        onStart: () => {\n            if (open && onEnter) {\n                onEnter();\n            }\n        },\n        onRest: () => {\n            if (!open && onExited) {\n                onExited();\n            }\n        },\n    });\n\n    return (\n        <animated.div ref={ref} style={style} {...other}>\n            {children}\n        </animated.div>\n    );\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    media: {\n        height: 150,\n        display: 'flex',\n\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    root2: {\n        display: 'flex',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        width: '100%',\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n    sticky: {\n        position: '-webkit-sticky',\n        position: 'sticky',\n        top: 0,\n        backgroundColor: 'yellow',\n        padding: '50px',\n        fontSize: '20px',\n    },\n    bottomOfScreen: {\n\n        position: \"fixed\",\n        bottom: theme.spacing.unit * -13,\n    }\n}));\n\nfunction MuiAlert(props) {\n    return <Alert elevation={6} variant=\"filled\" {...props} />;\n}\nexport const BeerModal = (props) => {\n\n    const [beerData] = useFetch(\n        \"https://api.punkapi.com/v2/beers\"\n    )\n    \n    const [open, setOpen] = React.useState(false);\n\n    const classes = useStyles();\n    const [ExpandDescription, setExpandDescription] = React.useState(true);\n    const [ExpandPairings, setExpandPairings] = React.useState(true);\n    const [newBeerFromId, setnewBeerFromId] =  useContext(CartContext);\n\n    // console.log('Selected beer id', newBeerFromId)\n\n    const handleOpen = (e, id) => {\n        setOpen(true);\n        console.log('open: ', id);\n        setnewBeerFromId(id);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        // setnewBeerFromId(0);        \n\n    };\n    const handleClick = () => {\n        setOpen(!open);\n    };\n    const [selectedShowDescription, setSelectedShowDescription] = React.useState(false);\n\n    const [selectedShowPairings, setSelectedShowPairings] = React.useState(false);\n    const handleCollapseDescription = () => {\n        setSelectedShowDescription((prev) => !prev);\n    };\n    const handleCollapseDPairings = () => {\n        setSelectedShowPairings((prev) => !prev);\n    };\n    const [notifyAddToCart, setNotifyAddToCart] = React.useState(false);\n    const handleCloseNotifySuccess = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setNotifyAddToCart(false);\n    };\n    return (\n        <div className={classes.root}>\n\n<Modal\n                aria-labelledby=\"spring-modal-title\"\n                aria-describedby=\"spring-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <Button onClick={handleClose} variant=\"contained\" color=\"primary\">close</Button>\n\n            \n{beerData.filter(d => d.id === newBeerFromId).map(({ id, name, image_url, abv, tagline, description, food_pairing }) => (\n    <Card className={classes.root2}>\n        <div className={classes.details}>\n            <CardContent className={classes.content}>\n                <Box component=\"p\" align=\"center\" fontWeight=\"fontWeightBold\">\n                    <Typography variant=\"h4\">\n                        {name}\n                    </Typography>\n                </Box>\n                <Typography variant=\"body2\" component=\"p\" align=\"center\">\n                    {tagline}\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\" align=\"center\">\n                    {abv}%\n                </Typography>\n                <br />\n                <Collapse in={ExpandDescription} timeout=\"auto\" unmountOnExit>\n                    <div className={classes.container}>\n                        <div className={classes.root}>\n                            <div className={classes.container}>\n                                <Collapse in={selectedShowDescription}>\n                                    Description:\n                                </Collapse>\n                                <Collapse in={selectedShowDescription} collapsedHeight={40}>\n                                    <Typography variant=\"body2\" component=\"p\">\n                                        {description}\n                                    </Typography>\n                                </Collapse>\n                            </div>\n                            <ToggleButton onChange={handleCollapseDescription}\n                                style={{ border: 'none' }}\n                                selected={selectedShowDescription}>\n\n                                {selectedShowDescription ? 'Less' : 'More'}\n\n                            </ToggleButton>\n                        </div>\n                    </div>\n                </Collapse>\n                <Collapse in={ExpandPairings} timeout=\"auto\" unmountOnExit>\n                    <div className={classes.container}>\n                        <div className={classes.root}>\n                            <div className={classes.container}>\n                                <Collapse in={selectedShowPairings}>\n                                    Perfect Pairings:\n                                </Collapse>\n                                <Collapse in={selectedShowPairings} collapsedHeight={40}>\n                                    <Typography variant=\"body2\" component=\"p\">\n                                        {food_pairing}\n                                    </Typography>\n                                </Collapse>\n                            </div>\n                            <ToggleButton onChange={handleCollapseDPairings}\n                                style={{ border: 'none' }}\n                                selected={selectedShowPairings}>\n\n                                {selectedShowPairings ? 'Less' : 'More'}\n\n                            </ToggleButton>\n                            {/* <Button onClick={addToCart} fullWidth variant=\"contained\" color=\"secondary\">Buy Now</Button> */}\n\n                        </div>\n                    </div>\n                </Collapse>\n            </CardContent>\n        </div>\n        <CardMedia\n            className={classes.cover}\n            image={image_url}\n            title={name}\n        />\n        <Snackbar open={notifyAddToCart} autoHideDuration={6000} onClose={handleCloseNotifySuccess}>\n            <MuiAlert onClose={handleCloseNotifySuccess} severity=\"success\">\n                Added \"{name}\" to cart!\n</MuiAlert>\n        </Snackbar>\n    </Card>\n\n))\n}\n<BeerModal />\n                </Fade>\n            </Modal>\n        </div>\n    );\n\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Grid, Card} from '@material-ui/core';\nimport Draggable from 'react-draggable'; \nimport CartContext from '../../CartContext'\nimport { Cart } from '../Cart/Cart';\nimport { BeerList } from '../BeerList/BeerList'\nimport { BeerModal } from '../BeerModal/BeerModal'\n\nconst innerTheme = createMuiTheme({\n    palette: {\n        type: 'light',\n    }\n});\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n    children: PropTypes.element,\n    in: PropTypes.bool.isRequired,\n    onEnter: PropTypes.func,\n    onExited: PropTypes.func,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    media: {\n        height: 150,\n        display: 'flex',\n\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    root2: {\n        display: 'flex',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        width: '100%',\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n    sticky: {\n        position: '-webkit-sticky',\n        position: 'sticky',\n        top: 0,\n        backgroundColor: 'yellow',\n        padding: '50px',\n        fontSize: '20px',\n    },\n    bottomOfScreen: {\n\n        position: \"fixed\",\n        bottom: theme.spacing.unit * -13,\n    }\n}));\n\nexport default function MainView() {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    };\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n\n        <div className={classes.root}>\n            <Paper className={classes.root} >\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                >\n                    <Tab {...a11yProps(0)} label=\"ALL\" />\n                    <Tab {...a11yProps(0)} label=\"PIZZA\" />\n                    <Tab  {...a11yProps(0)} label=\"STEAK\" />\n                </Tabs>\n            </Paper>\n            <ThemeProvider theme={innerTheme}>\n                <SwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={value}\n                    onChangeIndex={handleChangeIndex}\n                    style={{ backgroundColor: 'white' }}\n                >\n                    <TabPanel value={value} index={0} dir={theme.direction}\n                    >\n                        <Grid container spacing={2}\n                        >\n                            <CartContext.Consumer>\n                                {context => (\n                                    <>\n                                        {/* <Cart /> */}\n                                        <BeerList />\n                                        <BeerModal />\n\n                                    </>\n                                )}\n                            </CartContext.Consumer>\n                        </Grid>\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction}>\n                        Some Beer\n                </TabPanel>\n                    <TabPanel value={value} index={2} dir={theme.direction}>\n                        Some Pizza\n                </TabPanel>\n                </SwipeableViews>\n            </ThemeProvider>\n\n            {/* <Box className={classes.bottomOfScreen} style={{width: '100%'}}>\n\n                <Draggable axis=\"y\" handle=\"strong\" bounds={{ top: -100, left: 0, right: 0, bottom: 0 }} >\n                    <Card>\n                        <div className=\"box no-cursor\">\n                            <strong className=\"cursor\">\n                                <Box mx={15} my={1}>\n                                    <div style={{\n                                        width: '100%',\n                                        background: 'grey',\n                                        borderRadius: '25px',\n                                        paddingLeft: '20'\n                                    }}>\n                                        &nbsp;\n                                </div>\n                                </Box>\n                            </strong>\n\n                            <TableContainer component={Paper}>\n                                <Table >\n\n                                    <TableBody >\n                                        {beerData.filter(d => d.id === 1).map(({ id, name, image_url, abv, tagline, description, food_pairing }) => (\n                                            <TableRow key={id}>\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    <Badge badgeContent={\"£\" + totalBeerPrice} color=\"secondary\">\n                                                        <img src={image_url} alt={name} height=\"42\" width=\"42\"></img>\n                                                    </Badge>\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                    {name}\n                                                    <br />\n                                                    {tagline}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <Box display=\"flex\" flexDirection=\"row\" >\n                                                        <IconButton variant=\"contained\" color=\"secondary\" onClick={() => setCount(count - 1)}>\n                                                            <RemoveIcon />\n                                                        </IconButton>\n                                                        <Box width={30} style={{ textAlign: 'center', paddingTop: 10 }}>{count}</Box>\n\n                                                        <IconButton width={10} variant=\"contained\" color=\"secondary\" onClick={() => setCount(count + 1)}>\n                                                            <AddIcon />\n                                                        </IconButton>\n                                                    </Box>\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton aria-label=\"delete\">\n                                                        <DeleteIcon />\n                                                    </IconButton>\n                                                </TableCell>\n\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </div>\n                    </Card>\n                </Draggable>\n            </Box> */}\n\n            {/* <CartContext.Consumer>\n\n                {context => (\n                    Object.keys(context.beers).map(id => (\n                        <p>{context.beers[id].name}</p>\n                    ))\n                )}\n            </CartContext.Consumer> */}\n\n\n        </div>\n    );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport DrinkIcon from '@material-ui/icons/LocalBar';\nimport FoodIcon from '@material-ui/icons/Restaurant';\nimport DiscountIcon from '@material-ui/icons/MoneyOff';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SubViews from '../SubViews/SubViews'\nimport CartContext from '../../CartContext'\nimport { Cart } from '../Cart/Cart';\n\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  indicator: {\n    backgroundColor: theme.palette.background.paper,\n    height: '3px',\n\n  }\n}));\n\n\nexport default function MainView() {\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [view, setview] = React.useState(0);\n\n  const handleChangeView = (event, newview) => {\n    setview(newview);\n  };\n\n\n  const [value, setValue] = React.useState(0);\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n\n  return (\n    <div className={classes.root}>\n                  <CartContext.Consumer>{context => (<Cart />)}</CartContext.Consumer>\n\n      <AppBar position=\"sticky\" color=\"default\" color=\"primary\">\n        <Tabs\n          value={view}\n          onChange={handleChangeView}\n          aria-label=\"simple tabs example\"\n          variant=\"fullWidth\"\n          classes={{\n            indicator: classes.indicator\n          }}>\n          >\n          <Tab icon={<DrinkIcon />} {...a11yProps(0)} />\n          <Tab icon={<FoodIcon />} {...a11yProps(0)} />\n          <Tab icon={<DiscountIcon />}{...a11yProps(0)} />\n          <Tab icon={<SearchIcon />} {...a11yProps(0)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={view} index={0}>\n      {/* <CartContext.Consumer> */}\n      {/* {context => ( */}\n\n        <SubViews />\n      {/* )} */}\n        {/* </CartContext.Consumer> */}\n      </TabPanel>\n      <TabPanel value={view} index={1}>\n        <SubViews />\n      </TabPanel>\n      <TabPanel value={view} index={2}>\n        <SubViews />\n      </TabPanel>\n      \n    </div>\n  );\n}","import React from 'react';\nimport MainView from './components/MainView/MainView';\nimport {CartProvider, CartContext} from './CartProvider'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n                  <CartProvider>\n\n      <MainView />\n      </CartProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable linebreak-style */\nimport { createMuiTheme } from '@material-ui/core'\nimport { red, yellow, green } from '@material-ui/core/colors';\n\nconst colors = {\n    primary: red[500],\n    secondary: yellow[500],\n    status: green[500],\n\n};\n\nexport default createMuiTheme({\n    palette: {\n        type: 'dark',\n\n        primary: {\n            main: colors.primary,\n        },\n        secondary: {\n            main: colors.secondary,\n        },\n        status: {\n            main: colors.status,\n        },\n\n    },\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport theme from './theme';\nimport { ThemeProvider } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst GlobalCss = withStyles({\n  // @global is handled by jss-plugin-global.\n  '@global': {\n    // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\n    '.MuiBox-root': {\n      padding: '0',\n    },\n  },\n})(() => null);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n    <GlobalCss />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}